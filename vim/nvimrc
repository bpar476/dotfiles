" Author: Max Lay
" Taken from https://github.com/kalda341/dotfiles/blob/master/editors/vim/vimrc

syntax on
set nocompatible 

filetype on
filetype plugin on

set shell=/bin/bash

"Easy ways of getting into normal mode
inoremap kk <ESC>
inoremap jj <ESC>
let mapleader = "\<Space>"

" Load vim-plug
if empty(glob("~/.vim/autoload/plug.vim"))
    execute '!mkdir -p ~/.vim/autoload'
    execute '!curl -fLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim'
    :qall
endif

set history=200

"Indentation and tabs
" Use two space tabs for html templates
autocmd FileType html setlocal shiftwidth=2 tabstop=2
autocmd FileType hbs setlocal shiftwidth=2 tabstop=2

set expandtab
set softtabstop=4
set shiftwidth=4
set autoindent

"Indent entire document
map <Leader><C-i> mzgg=G'z

"Reload file if edits happen somewhere else
set autoread

"Statusline stuff
"Display status line always
set laststatus=2
set ruler
set showcmd
set ch=1

"Ignore some file types
set wildmenu                    " Cool cmd completion
set wildignorecase
"%% is directory containing current file
cabbr <expr> %% expand('%:p:h')
set wildignore+=.hg,.git,.svn   " Version control
set wildignore+=*.pyc           " Python byte code
set wildignore+=*.beam           " Erlang byte code
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg
set wildignore+=*.class,*.o

"Display whitespace
set listchars=tab:->,trail:~,extends:>,precedes:<
set list

"Line numbers and limits
set number                      " Show line numbers
set cc=150                       " Ver line in 80 column
set cursorline

"Movement
set scrolloff=20                 " Start scrolling n lines before border

"Scroll wrapped lines normally
noremap  <buffer> <silent> k gk
noremap  <buffer> <silent> j gj

"End of line
inoremap <C-e> <C-o>$
"Start of line
inoremap <C-a> <C-o>^

"Search
set hlsearch                    " Highlight searches
set incsearch                   " Highlight dynamically as pattern is typed
set ignorecase                  " Ignore case of searches
nmap <Leader>/ :nohlsearch<CR>

"Allows undo after file is closed
if exists("&undodir")
    set undofile
    set undodir=/tmp
endif
"Swap files and backup are super annoying. I save often
set noswapfile
set nobackup

"Theme
set background=dark
set t_Co=256
colorscheme tender

"Set cursorcolumn
nmap <Leader>scc :set cuc<CR>
nmap <Leader>Scc :set nocuc<CR>

"Buffers
noremap <silent><Leader>bp :bprevious<CR>
noremap <silent><Leader>bn :bnext<CR>
noremap <silent><Leader>bc :bd<CR>

"Tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove

"Changlist
noremap <silent><Leader>cp :cprev<CR>
noremap <silent><Leader>cn :cnext<CR>

"Quickfix
noremap <Leader>q :copen<CR>
noremap <Leader>Q :cclose<CR>

"FileTypes
"web
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html,hbs set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType html,htmldjango setlocal tabstop=4 softtabstop=2 shiftwidth=2 
autocmd BufEnter *html map <F11> :setfiletype htmldjango<CR>
autocmd BufEnter *html map <S-F11> :setfiletype django<CR>
"Python
let python_highlight_all = 1
"Fix double indentation
let g:pyindent_open_paren = '&sw'
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType python nnoremap <F5> :w<CR>:!python %<CR>
autocmd FileType python setlocal complete-=i
autocmd FileType python setlocal complete-=i
autocmd FileType python setlocal dictionary=~/.vim/dict/python
autocmd FileType python setlocal complete+=k
autocmd FileType python setlocal tabstop=4 softtabstop=4 shiftwidth=4 
"Remove trailing whitespace upon saving python file
autocmd BufWritePre *.py :%s/\s\+$//e

"Make it easier to navigate windows
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

"Vimrc stuff
nmap <silent> <Leader>ev :tabe ~/.vimrc<CR>
nmap <silent> <Leader>sv :so ~/.vimrc<CR>
nmap <silent> <Leader>bi :BundleInstall<CR>

"Newline
map <Leader>o o<Esc>
map <Leader>O O<Esc>

"Copy, paste and cut to system clipboard
map <Leader>y "+y
map <Leader>x "+d
map <Leader>p :set paste<CR>"+p:set nopaste<CR>
map <Leader>P :set paste<CR>"+P:set nopaste<CR>
"Copy to end of line
noremap Y y$

"Repeat motion
let repmo_key=","
let repmo_revkey="\\"

"Use ; as :
nnoremap ; :

"Saving
nmap <Leader>w :w!<cr>
"Sudo write
cmap w!! w !sudo tee % >/dev/null

"cd
map <Leader>cd :cd %:p:h<cr>:pwd<cr>

"Use local config if available
if filereadable("~/.vimrc.local")
    so ~/.vimrc.local
endif
